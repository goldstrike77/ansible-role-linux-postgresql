- name: 'PostgreSQL Server Configuration'
  lineinfile:
    state: present
    dest: '{{ pgsql_path }}/pgsql/postgresql.conf'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - '{{ pgsql_conf_parameter }}'

- name: 'PostgreSQL Configure & Scripts file transfer'
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: postgres
    group: postgres
    mode: '{{ item.mode }}'
  with_items:
    - { src: '.pgpass', dest: '/var/lib/pgsql/.pgpass', mode: '0600' }
    - { src: 'pgbackrest.conf', dest: '/etc/pgbackrest.conf', mode: '0755' }
    - { src: 'pgBackRest-runner.sh', dest: '/usr/local/bin/pgBackRest-runner.sh', mode: '0755' }

- name: 'Modify the PostgreSQL default data folder'
  lineinfile:
    state: present
    dest: '/lib/systemd/system/{% if pgsql_releases == "PostgresPro" %}postgrespro{% else %}postgresql{% endif %}-{{ pgsql_version | regex_replace("96", "9.6") }}.service'
    insertafter: '^\[Service\]'
    regexp: '^Environment=PGDATA'
    line: 'Environment=PGDATA={{ pgsql_path }}/pgsql'

- name: 'Changing Limits for PostgreSQL services'
  lineinfile:
    state: present
    dest: '/lib/systemd/system/{% if pgsql_releases == "PostgresPro" %}postgrespro{% else %}postgresql{% endif %}-{{ pgsql_version | regex_replace("96", "9.6") }}.service'
    insertafter: '^\[Service\]'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - '{{ pgsql_service_parameter }}'

- name: 'Ensure PostgreSQL service is enabled'
  systemd:
    name: '{% if pgsql_releases == "PostgresPro" %}postgrespro{% else %}postgresql{% endif %}-{{ pgsql_version | regex_replace("96", "9.6") }}.service'
    enabled: yes
    state: started
    daemon_reload: yes
  when:
    - ansible_distribution_major_version|int > 6

- name: 'Modify PostgreSQL default password'
  postgresql_user:
    user: 'postgres'
    password: '{{ db_sa_pass|default(omit,true) }}'
  no_log: true

- name: 'Create the PostgreSQL backup stanza'
  shell: /bin/su - {{ pgsql_user }} -c "pgbackrest --stanza=database --log-level-console=info stanza-create"

- name : 'PostgreSQL backup job'
  cron:
    name: 'PostgreSQL backup job'
    user: postgres
    minute: "{{ 59 |random}}"
    hour: "{{ (( inventory_hostname | hash | list | map('int',0,16) | sum ) % 2) + 1 }}"
    job: "/usr/local/bin/pgBackRest-runner.sh"

- name: Ensure MTA service is enabled
  systemd:
    name: 'postfix.service'
    enabled: 'yes'
    state: 'started'
  when:
    - ansible_distribution_major_version|int > 6
