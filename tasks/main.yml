---
- name: Include OS-specific variables
  include_vars: '{{ ansible_os_family }}.yml'

- name: Include tasks for specific OS
  include: '{{ ansible_os_family }}.yml'

- name: Creating PostgreSQL folder
  file:
    dest: '{{ item }}'
    state: directory
    owner: '{{ pgsql_user }}'
    group: '{{ pgsql_group }}'
    mode: 0755
  with_items:
    - '{{ pgsql_folder }}'

- name: Modify the PostgreSQL default data folder
  lineinfile:
    state: present
    dest: '/lib/systemd/system/postgrespro-{{ pgsql_version | regex_replace("96", "9.6") }}.service'
    insertafter: '^\[Service\]'
    regexp: '^Environment=PGDATA'
    line: 'Environment=PGDATA={{ pgsql_path }}/pgsql'

- name: 'Set system-wide PATH parameters'
  lineinfile: 
    dest: '/etc/profile'
    line: "export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/pgpro-9.6/bin"

- name: Check if PostgreSQL tablespace exists
  stat:
    path: '{{ item }}'
  with_items:
    - '{{ pgsql_path }}/pgsql/PG_VERSION'
  register: result

- name: Initializes the PostgreSQL system tables
  shell: /bin/su - {{ pgsql_user }} -c "initdb -D {{ pgsql_path }}/pgsql"
  when: 
    - not result.results[0].stat.exists
  register: result

- name: PostgreSQL Server Configuration
  lineinfile:
    state: present
    dest: '{{ pgsql_path }}/pgsql/postgresql.conf'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - { regexp: '^listen_addresses ', line: 'listen_addresses = {{ pgsql_listen_addresses }}' }
    - { regexp: '^max_connections ', line: 'max_connections = {% if ansible_memtotal_mb > 4096 and ansible_memtotal_mb <= 8192 %}210{% elif ansible_memtotal_mb > 8192 and ansible_memtotal_mb <= 16384 %}310{% elif ansible_memtotal_mb > 16384 and ansible_memtotal_mb <= 32768 %}510
{% elif ansible_memtotal_mb > 32768 %}610{% else %}50{% endif %}' }
    - { regexp: '^shared_buffers ', line: 'shared_buffers {{ (ansible_memtotal_mb * 0.25)|int }}MB' }
    - { regexp: '^effective_cache_size ', line: 'effective_cache_size {{ (ansible_memtotal_mb * 0.75)|int }}MB' }
    - { regexp: '^maintenance_work_mem ', line: 'maintenance_work_mem {{ (ansible_memtotal_mb * 0.0625)|int }}MB' }
    - { regexp: '^checkpoint_completion_target ', line: 'checkpoint_completion_target {{ pgsql_checkpoint_completion_target }}' }
    - { regexp: '^wal_buffers ', line: 'wal_buffers {{ pgsql_wal_buffers }}' }
    - { regexp: '^default_statistics_target ', line: 'default_statistics_target {{ pgsql_default_statistics_target }}' }
    - { regexp: '^random_page_cost ', line: 'random_page_cost {{ pgsql_random_page_cost }}' }
    - { regexp: '^effective_io_concurrency ', line: 'effective_io_concurrency {{ pgsql_effective_io_concurrency }}' }
    - { regexp: '^work_mem ', line: 'work_mem {{ (ansible_memtotal_mb * 0.0004 * 1024 )|int }}kB' }
    - { regexp: '^min_wal_size ', line: 'min_wal_size {{ pgsql_min_wal_size }}' }
    - { regexp: '^max_wal_size ', line: 'max_wal_size {{ pgsql_max_wal_size }}' }
    - { regexp: '^max_worker_processes ', line: 'max_worker_processes {{ ansible_processor_vcpus }}' }
    - { regexp: '^max_parallel_workers_per_gather ', line: 'max_parallel_workers_per_gather {% if (ansible_processor_vcpus * 0.5)|int < 1 %}1{% else %}{{ (ansible_processor_vcpus * 0.5)|int }}{% endif %}' }
  when:
    - result|changed
