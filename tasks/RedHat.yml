---
- name: Include OS-specific variables
  include_vars: '{{ ansible_os_family }}.yml'

- name: Add EPEL YUM repositories.
  yum_repository:
    name: '{{ pgsql_epel_repo_name }}'
    description: '{{ pgsql_epel_repo_name }} YUM repo'
    file: '{{ pgsql_epel_repo_name }}'
    baseurl: '{{ pgsql_epel_repo_url }}'
    gpgcheck: 'no'
    timeout: '60'
  when:
    - pgsql_backupset_arg.cloud_rsync | bool
    - pgsql_backupset_arg.cloud_drive is defined

- name: Install the Rclone command line program packages.
  yum:
    name: 'rclone'
    state: 'present'
    validate_certs: 'no'
    disable_gpg_check: 'yes'
    update_cache: 'yes'
  register: yum_status
  until: yum_status is succeeded
  retries: 3
  delay: 5
  when:
    - pgsql_backupset_arg.cloud_rsync | bool
    - pgsql_backupset_arg.cloud_drive is defined

- name: '{{ pgsql_releases }} installation'
  block:
    - name: 'Add {{ pgsql_releases }} YUM repositories'
      yum_repository:
        name: '{{ pgsql_repo_name }}'
        description: '{{ pgsql_repo_name }} YUM repository'
        file: '{{ pgsql_repo_name }}'
        baseurl: '{{ pgsql_repo_url }}'
        gpgcheck: 'no'
        timeout: '60'
    - name: Install the {{ pgsql_releases }} packages
      yum:
        name: '{{ ",".join(vars["pgsql_packages_" + pgsql_version]) }}'
        state: 'present'
        validate_certs: 'no'
        disable_gpg_check: 'yes'
      register: yum_status
      until: yum_status is succeeded
      retries: 3
      delay: 5
  when: pgsql_releases == 'PostgreSQL'

- name: '{{ pgsql_releases }} installation'
  block:
    - name: 'Add {{ pgsql_releases }} YUM repositories'
      yum_repository:
        name: '{{ pgpro_repo_name }}'
        description: '{{ pgpro_repo_name }} YUM repository'
        file: '{{ pgpro_repo_name }}'
        baseurl: '{{ pgpro_repo_url }}'
        gpgcheck: 'no'
        timeout: '60'
    - name: Install the {{ pgsql_releases }} packages
      yum:
        name: '{{ ",".join(vars["pgpro_packages_" + pgsql_version]) }}'
        state: 'present'
        validate_certs: 'no'
        disable_gpg_check: 'yes'
      register: yum_status
      until: yum_status is succeeded
      retries: 3
      delay: 5
  when: pgsql_releases == 'PostgresPro'
